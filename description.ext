/*
 * Author: Eric
 * set mission attributes and define global entities.
 *
 * Arguments:
 * None
 *
 * Return Value:
 * None
 *
 * Example:
 * None
 *
 * Public: Yes
*/

// Enable Debrief
debriefing = 1;
// Disable forced complex flightmodel
forceRotorLibSimulation = 0;
// Enable Debug for Dary and Eric
enableDebugConsole[] = { "76561198098666924", "76561198065818848" };
// Enable function logging
allowFunctionsLog=1;
// Include the RscTitles classes for taw_vd's GUI elements
#include "taw_vd\GUI.h"
// Include the RscTitles classes for Erics Rallypoints's GUI elements
#include "rsc\rallypoint\rallypointDialog.hpp"

class CfgFunctions
{
	class EMF
	{
		class requiredUtilityFunctions
		{
			file = "functions\requiredUtilityFunctions";
			class EMFRoleSet {};
		};
		class kosherArsenal
		{
			file = "functions\kosherArsenal";
			class kosherArsenal {};
			class kosherArsenalLoad {};
			class kosherAmmoBox {};
			class kosherArsenalForce {};
		};
		class limitedRespawns
		{
			file = "functions\limitedRespawns";
			class limitedRespawns {};
			class limitedRespawnsSet {};
		};
		class miscGameplayUtilities
		{
			file = "functions\miscGameplayUtilities";
			class restrictedVehicle {};
			class repairRearmTrigger {};
			class rallypoint {};
			class safeStart {};
		};
		class miscUtilities
		{
			file = "functions\miscUtilities";
			class enhancedAttachTo {};
			class setDate {};
			class zeusFPS {};
			class preventProne {};
			class countDown {};
			class notZeus {};
		};
		class init
		{
			file = "functions\init";
			class setSkill {postInit = 1};
		}
	};

	// Include the main functions library of taw_vd
	#include "taw_vd\CfgFunctions.hpp"
};

// Declare custom debrief classes
class CfgDebriefing
{
	// Kick back to lobby if player is not zeus
	class wrongZeus
	{
		title = "You're not zeus";
		subtitle = "";
		description = "This slot is reserved for zeus";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
	// Kick back to lobby if not enough players to satisfy role
	class notEnoughPlayers
	{
		title = "Not enough players";
		subtitle = "";
		description = "This slot is limited by amount of players";
		pictureBackground = "";
		picture = "";
		pictureColor[] = {0.0,0.3,0.6,1};
	};
};
